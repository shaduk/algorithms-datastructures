{"filter":false,"title":"BFSlevel.cpp","tooltip":"/hackerearth/BFSlevel.cpp","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":68,"column":0},"action":"insert","lines":["#include <iostream>","#include <vector>","#include <queue>","using namespace std;","","vector<int> adj[10000];","bool visited[10000];","int level[10000];","queue<int> myq;","","void initialize()","{","\tfor(int i = 0; i < 10000; i++)","\tvisited[i] = false;","\t","\tfor(int i = 0; i < 10000; i++)","\tlevel[i] = 0;","}","","void bfs(int i)","{","\tvisited[i] = true;","\tmyq.push(i);","\twhile(!myq.empty())","\t{","\t\tint current = myq.front();","\t\tmyq.pop();","\t\tfor(int j = 0; j < adj[current].size(); j++)","\t\t{","\t\t\tif(!visited[adj[current][j]])","\t\t\t{","\t\t\t\tlevel[adj[current][j]] = level[current] + 1;","\t\t\t\tmyq.push(adj[current][j]);","\t\t\t\tvisited[adj[current][j]] = true;","\t\t\t}","\t\t}","\t}","}","","int main()","{","   \tint N, x, ans = 0;","   \tcin >> N;","   \tN = N-1;","   \twhile(N--)","   \t{","   \t\tint a,b;","   \t\tcin >> a >> b;","   \t\tadj[a].push_back(b);","   \t\tadj[b].push_back(a);","   \t}","   \tcin >> x;","   \tinitialize();"," \tfor(int i = 1; i <= 20; i++)"," \t{"," \t\tif(!visited[i])"," \t\tbfs(i);"," \t}"," \tfor(int i = 1; i < 10000; i++)"," \t{"," \t\t"," \t\tif(level[i] == x-1)"," \t\tans++;"," \t}"," "," \tcout << ans;","   \t","}",""],"id":1}]]},"ace":{"folds":[],"scrolltop":120,"scrollleft":0,"selection":{"start":{"row":68,"column":0},"end":{"row":68,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":5,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1463058594759,"hash":"459b164b97025e0c5a967693a3573b48961d9460"}