{"filter":false,"title":"monkandiq-priorityq.cpp","tooltip":"/hackerearth/monkandiq-priorityq.cpp","undoManager":{"mark":4,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":36,"column":0},"action":"insert","lines":["#include <iostream>","#include <vector>","#include <utility>","#include <algorithm>","using namespace std;","","int main()","{","\tint C, P, N;","\tvector<std::pair<int,int>> items;","\tcin >> C >> P >> N;","\tfor(int i = 1; i <= C; i++)","\t{","\t\tif(i <= P)","\t\t{","\t\t\tint input;","\t\t\tcin >> input;","\t\t\titems.push_back(make_pair(i,input));","\t\t}","\t\telse","\t\titems.push_back(make_pair(i,0));","\t}","\t","\tauto cmp = [](std::pair<int,int> const & a, std::pair<int,int> const & b) ","\t{ ","    \t return a.second != b.second?  a.second < b.second : a.first > b.first;","\t};","\t","\tstd::sort(items.begin(), items.end(), cmp);","\t","    for(int i = 0; i < N; i++)","\t{","\t\tcout << items[i].first << \" \";","\t}","    cout << endl;","}",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":36,"column":0},"action":"remove","lines":["#include <iostream>","#include <vector>","#include <utility>","#include <algorithm>","using namespace std;","","int main()","{","\tint C, P, N;","\tvector<std::pair<int,int>> items;","\tcin >> C >> P >> N;","\tfor(int i = 1; i <= C; i++)","\t{","\t\tif(i <= P)","\t\t{","\t\t\tint input;","\t\t\tcin >> input;","\t\t\titems.push_back(make_pair(i,input));","\t\t}","\t\telse","\t\titems.push_back(make_pair(i,0));","\t}","\t","\tauto cmp = [](std::pair<int,int> const & a, std::pair<int,int> const & b) ","\t{ ","    \t return a.second != b.second?  a.second < b.second : a.first > b.first;","\t};","\t","\tstd::sort(items.begin(), items.end(), cmp);","\t","    for(int i = 0; i < N; i++)","\t{","\t\tcout << items[i].first << \" \";","\t}","    cout << endl;","}",""],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":57,"column":0},"action":"insert","lines":["#include <iostream>","#include <vector>","#include <stack>","#include <queue>","#include <utility>","#include <algorithm>","using namespace std;","","class CompareDist","{","public:","    bool operator()(pair<int,int> n1,pair<int,int> n2) {","        return n1.second<n2.second;","    }","};","","int main()","{","\tint C, P, N;","\tpriority_queue<pair<int,int>,vector<pair<int,int>>,CompareDist> pq;","\tvector<stack<int>> myvector;","\tcin >> C >> P >> N;","\tfor(int i = 1; i <= C; i++)","\t{","\t\tif(i <= P)","\t\t{","\t\t\tint input;","\t\t\tcin >> input;","\t\t\tmyvector[i].push(input);","\t\t\tpq.push(make_pair(i,input));","\t\t}","\t\telse","\t\t{\tmyvector[i].push(0);","\t\t\tpq.push(make_pair(i,0));","\t\t}","\t}","\tfor(int i = 1; i <= P; i++)","\t{","\t\tint input, last, seclast, z;","\t\tcin >> input;","\t\tint j = pq.top().first;","\t\tpq.pop();","\t\tif(myvector[j].size() < 2)","\t\t{","\t\t\tmyvector[j].push(input);","\t\t\tpq.push(make_pair(j,));","\t\t}","\t\telse","\t\t{","\t\t\tlast = myvector[j].top();","\t\t\tmyvector[j].pop();","\t\t\tseclast = myvector[j].top();","\t\t\tmyvector[j].push(last);","\t\t\tpq.push(make_pair(j,last+seclast));","\t\t}","\t}","}",""],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":57,"column":0},"action":"remove","lines":["#include <iostream>","#include <vector>","#include <stack>","#include <queue>","#include <utility>","#include <algorithm>","using namespace std;","","class CompareDist","{","public:","    bool operator()(pair<int,int> n1,pair<int,int> n2) {","        return n1.second<n2.second;","    }","};","","int main()","{","\tint C, P, N;","\tpriority_queue<pair<int,int>,vector<pair<int,int>>,CompareDist> pq;","\tvector<stack<int>> myvector;","\tcin >> C >> P >> N;","\tfor(int i = 1; i <= C; i++)","\t{","\t\tif(i <= P)","\t\t{","\t\t\tint input;","\t\t\tcin >> input;","\t\t\tmyvector[i].push(input);","\t\t\tpq.push(make_pair(i,input));","\t\t}","\t\telse","\t\t{\tmyvector[i].push(0);","\t\t\tpq.push(make_pair(i,0));","\t\t}","\t}","\tfor(int i = 1; i <= P; i++)","\t{","\t\tint input, last, seclast, z;","\t\tcin >> input;","\t\tint j = pq.top().first;","\t\tpq.pop();","\t\tif(myvector[j].size() < 2)","\t\t{","\t\t\tmyvector[j].push(input);","\t\t\tpq.push(make_pair(j,));","\t\t}","\t\telse","\t\t{","\t\t\tlast = myvector[j].top();","\t\t\tmyvector[j].pop();","\t\t\tseclast = myvector[j].top();","\t\t\tmyvector[j].push(last);","\t\t\tpq.push(make_pair(j,last+seclast));","\t\t}","\t}","}",""],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["#include <iostream>","#include <vector>","#include <stack>","#include <queue>","#include <utility>","#include <algorithm>","using namespace std;","","class CompareDist","{","public:","    bool operator()(pair<long long int,int> n1,pair<long long int,long long int> n2) {","    \tif(n1.second == n2.second)","    \t\treturn n1.first>n2.first;","        return n1.second>n2.second;","        ","    }","};","","int main()","{","\tlong long int C, P, N;","\tpriority_queue<pair<long long int,long long int>,vector<pair<long long int,long long int>>,CompareDist> pq;","\tvector<stack<long long int>> myvector(100010);","\tcin >> C >> P >> N;","\tfor(long long int i = 1; i <= C; i++)","\t{","\t\tif(i <= N)","\t\t{","\t\t\tlong long int input;","\t\t\tcin >> input;","\t\t\tmyvector[i].push(input);","\t\t\tpq.push(make_pair(i,input));","\t\t}","\t\telse","\t\t{\tmyvector[i].push(0);","\t\t\tpq.push(make_pair(i,0));","\t\t}","\t}","\tfor(long long int i = 1; i <= P; i++)","\t{","\t\tlong long int input, last, size;","\t\tcin >> input;","\t\tlong long int j = pq.top().first;","\t\tpq.pop();","\t\tcout << j << \" \";","\t\tlast = myvector[j].top();","\t\tmyvector[j].push(input);","\t\tsize = myvector[j].size();","\t\tif(last != 0)","\t\tpq.push(make_pair(j,size*(last+input)));","\t\telse","\t\tpq.push(make_pair(j,(size-1)*(last+input)));","\t}","}",""],"id":5}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":31,"column":27},"end":{"row":31,"column":27},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1458501300000,"hash":"d1bd0b63e7ca07e9c05a99e9a5a3bf49f3b958ce"}