{"filter":false,"title":"kingdommonkey.cpp","tooltip":"/hackerearth/kingdommonkey.cpp","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":55,"column":1},"action":"remove","lines":["#include <iostream>","#include <vector>","using namespace std;","","","vector<long long int> adj[1000000];","bool visited[1000000];","","void initialize()","{","    for(int i = 0;i < 10;++i)","     \tvisited[i] = false;","    ","}","","void dfs(int i)","{","   visited[i] = true;","   ","   for(int j = 0; j < adj[i].size(); j++)","   {","       if(visited[adj[i][j]] == false)","    \t  dfs(adj[i][j]);","   }","}","","int main()","{","    int test;","    cin >> test;","    while(test--)","    {","    \tint N,M, connected = 0;","\t\tcin >> N >> M;","    \tinitialize();","    \t","  \t\tfor(int i = 0; i < M; i++)","    \t{","    \t\tint x, y;","    \t\tcin >> x >> y;","    \t\tadj[x].push_back(y);","    \t\tadj[y].push_back(x);","    \t}","    ","    \t","    \tfor(int i = 1; i <= N; i++)","    \t{","    \t\tif(visited[i] == false)","    \t\t{","    \t\t\tdfs(i);","    \t\t\tconnected++;","    \t\t}","    \t}","    \tcout << connected << endl;","    }","}"],"id":2},{"start":{"row":0,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["#include <iostream>","#include <vector>","using namespace std;","","","vector<long long int> adj[1000000];","bool visited[1000000];","long long int bananas[1000000];","long long int temp = 0, maxi = 0;","","void initialize(long long int N)","{","    for(long long int i = 0;i <= N;++i)","     \tbananas[i] = 0;","    for(long long int i = 0;i <= N;++i)","     \tvisited[i] = false;","    for(long long int i = 0; i <= N; i++)","    \tadj[i].clear();","    temp = 0; ","    maxi = 0;","    ","}","","void dfs(long long int i)","{","   visited[i] = true;","   temp = temp + bananas[i];","   for(int j = 0; j < adj[i].size(); j++)","   {","       if(visited[adj[i][j]] == false)","    \t  dfs(adj[i][j]);","   }","}","","int main()","{","    int test;","    cin >> test;","    while(test--)","    {","    \tlong long int N,M;","\t\tcin >> N >> M;","    \tinitialize(N);","    \t","  \t\tfor(long long int i = 0; i < M; i++)","    \t{","    \t\tlong long int x, y;","    \t\tcin >> x >> y;","    \t\tadj[x].push_back(y);","    \t\tadj[y].push_back(x);","    \t}","    \t","    \tfor(long long int i = 1; i <= N; i++)","    \t{","    \t\tlong long int a; ","    \t\tcin >> a;","    \t\tbananas[i] = a;","    \t}","    \t","    \tfor(long long int i = 1; i <= N; i++)","    \t{","    \t\tif(visited[i] == false)","    \t\t{","    \t\t\tdfs(i);","    \t\t\tif(temp > maxi)","    \t\t\t{","    \t\t\t\tmaxi = temp;","    \t\t\t}","    \t\t\ttemp = 0;","    \t\t}","    \t}","    \tcout << maxi << endl;","    \t","    }","}",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":65,"column":8},"end":{"row":65,"column":8},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1455478646515,"hash":"ea55189ee1dcfe9ed03ed8f9fbdee499ed7703bb"}