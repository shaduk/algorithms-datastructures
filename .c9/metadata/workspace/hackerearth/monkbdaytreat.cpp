{"changed":false,"filter":false,"title":"monkbdaytreat.cpp","tooltip":"/hackerearth/monkbdaytreat.cpp","value":"/* https://www.hackerearth.com/code-monk-graph-theory-i/algorithm/monks-birthday-treat/ */\n\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nvector<int> adj[10000];\nbool visited[10000];\nint temp = 0, mini = 1000;\n\nvoid dfs(int i)\n{\n\tvisited[i] = true;\n\ttemp = temp + 1;\n\tfor(int j = 0; j < adj[i].size(); j++)\n\t{\n\t\tif(visited[adj[i][j]] == false)\n\t\tdfs(adj[i][j]);\n\t}\n}\n\nvoid initialize()\n{\n\tfor(int i = 0;i < 10000;++i)\n\t     visited[i] = false;\n}\n\nint main()\n{\n    int N,D;\n    cin >> N >> D;\n    initialize();\n    for(int i = 1; i <= D; i++)\n    {\n    \tint a,b;\n    \tcin >> a >> b;\n    \tadj[a].push_back(b);\n    }\n    \n    for(int i = 1; i <= N; i++)\n    {\n    \t\n    \tif(visited[i] == false)\n    \t{\n    \t\tdfs(i);\n    \t\tif(temp <= mini)\n    \t\t{\n    \t\t\tmini = temp;\n    \t\t}\n    \t\tinitialize();\n    \t\ttemp = 0;\n    \t}\n    \t\n    }\n    cout << mini << endl;\n}","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":118.5,"scrollleft":0,"selection":{"start":{"row":0,"column":90},"end":{"row":0,"column":90},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":5,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1455563652967}