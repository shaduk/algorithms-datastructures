{"filter":false,"title":"chandumsort.cpp","tooltip":"/hackerearth/chandumsort.cpp","undoManager":{"mark":56,"position":56,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":88},"action":"insert","lines":["/* https://www.hackerearth.com/code-monk-sorting/algorithm/chandu-and-his-girlfriend/ */"],"id":2}],[{"start":{"row":0,"column":88},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":2,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["#include <iostream>","using namespace std;","","void Merge(int Arr[], int start, int end, int mid)","{","   ","    ","    int i = start, j = mid + 1; ","    int k = 0;","    int lengthaux = end - start + 1;","    int Aux[lengthaux];","    ","    while(i <= mid && j <= end)","    {","        if(Arr[i] >= Arr[j])","        {","            Aux[k] = Arr[j];","            k++;","            ","            j++;","        }","        else if(Arr[j] >= Arr[i])","        {","            Aux[k] = Arr[i];","            k++;","            ","            i++;","        }","            ","    }","    while(i <= mid)","    {","        Aux[k] = Arr[i];","        k++;","        i++;","    }","    while(j <= end)","    {","        Aux[k] = Arr[j];","        k++;","        j++;","    }","    for(int l = 0; l < lengthaux; l++)","    {","        Arr[start] = Aux[l];","        start++;","    }","    ","    ","}","","void MergeSort(int Arr[], int start, int end)","{","   if(start < end){","    int mid = (start + end) / 2;","    MergeSort(Arr, start, mid);","    MergeSort(Arr, mid+1, end);","    Merge(Arr, start, end, mid);","   }","}","","","","int main()","{","    ","    int Arry[8] = {4,3,1,2,7,8,5,3};","    MergeSort(Arry, 0, 7);","","    for(int i = 0; i < 8; i++)","    {","        cout << Arry[i];","    }","    cout << endl;","}",""],"id":5}],[{"start":{"row":67,"column":4},"end":{"row":79,"column":6},"action":"insert","lines":["int testcases;","    cin >> testcases;","    while(testcases--)","    {","    \tint totalnos;","    \tvector<int> novector; ","    \tcin >> totalnos;","    \tfor(int i = 0; i < totalnos; i ++)","    \t{","    \t\tint no;","    \t\tcin >> no;","    \t\tnovector.push_back(no);","    \t}"],"id":6}],[{"start":{"row":79,"column":6},"end":{"row":80,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":80,"column":0},"end":{"row":80,"column":5},"action":"insert","lines":["    \t"]}],[{"start":{"row":80,"column":4},"end":{"row":80,"column":5},"action":"remove","lines":["\t"],"id":8}],[{"start":{"row":80,"column":0},"end":{"row":80,"column":4},"action":"remove","lines":["    "],"id":9}],[{"start":{"row":80,"column":0},"end":{"row":80,"column":4},"action":"insert","lines":["    "],"id":10}],[{"start":{"row":80,"column":4},"end":{"row":80,"column":5},"action":"insert","lines":["}"],"id":11}],[{"start":{"row":80,"column":5},"end":{"row":81,"column":0},"action":"insert","lines":["",""],"id":12},{"start":{"row":81,"column":0},"end":{"row":81,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":80,"column":4},"end":{"row":82,"column":4},"action":"insert","lines":["","        ","    "],"id":13}],[{"start":{"row":80,"column":4},"end":{"row":80,"column":8},"action":"insert","lines":["    "],"id":14}],[{"start":{"row":84,"column":4},"end":{"row":84,"column":36},"action":"remove","lines":["int Arry[8] = {4,3,1,2,7,8,5,3};"],"id":15}],[{"start":{"row":80,"column":8},"end":{"row":80,"column":30},"action":"insert","lines":["MergeSort(Arry, 0, 7);"],"id":16}],[{"start":{"row":80,"column":21},"end":{"row":80,"column":22},"action":"remove","lines":["y"],"id":17}],[{"start":{"row":80,"column":20},"end":{"row":80,"column":21},"action":"remove","lines":["r"],"id":18}],[{"start":{"row":80,"column":19},"end":{"row":80,"column":20},"action":"remove","lines":["r"],"id":19}],[{"start":{"row":80,"column":18},"end":{"row":80,"column":19},"action":"remove","lines":["A"],"id":20}],[{"start":{"row":80,"column":18},"end":{"row":80,"column":19},"action":"insert","lines":["n"],"id":21}],[{"start":{"row":80,"column":19},"end":{"row":80,"column":20},"action":"insert","lines":["o"],"id":22}],[{"start":{"row":80,"column":20},"end":{"row":80,"column":21},"action":"insert","lines":["v"],"id":23}],[{"start":{"row":80,"column":21},"end":{"row":80,"column":22},"action":"insert","lines":["e"],"id":24}],[{"start":{"row":80,"column":22},"end":{"row":80,"column":23},"action":"insert","lines":["c"],"id":25}],[{"start":{"row":80,"column":18},"end":{"row":80,"column":23},"action":"remove","lines":["novec"],"id":26},{"start":{"row":80,"column":18},"end":{"row":80,"column":26},"action":"insert","lines":["novector"]}],[{"start":{"row":80,"column":31},"end":{"row":80,"column":32},"action":"remove","lines":["7"],"id":27}],[{"start":{"row":80,"column":31},"end":{"row":80,"column":32},"action":"insert","lines":["t"],"id":28}],[{"start":{"row":80,"column":32},"end":{"row":80,"column":33},"action":"insert","lines":["o"],"id":29}],[{"start":{"row":80,"column":33},"end":{"row":80,"column":34},"action":"insert","lines":["t"],"id":30}],[{"start":{"row":80,"column":34},"end":{"row":80,"column":35},"action":"insert","lines":["a"],"id":31}],[{"start":{"row":80,"column":35},"end":{"row":80,"column":36},"action":"insert","lines":["l"],"id":32}],[{"start":{"row":80,"column":31},"end":{"row":80,"column":36},"action":"remove","lines":["total"],"id":33},{"start":{"row":80,"column":31},"end":{"row":80,"column":39},"action":"insert","lines":["totalnos"]}],[{"start":{"row":80,"column":39},"end":{"row":80,"column":40},"action":"insert","lines":["-"],"id":34}],[{"start":{"row":80,"column":40},"end":{"row":80,"column":41},"action":"insert","lines":["1"],"id":35}],[{"start":{"row":80,"column":43},"end":{"row":81,"column":0},"action":"insert","lines":["",""],"id":36},{"start":{"row":81,"column":0},"end":{"row":81,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":81,"column":8},"end":{"row":85,"column":17},"action":"insert","lines":["for(int i = 0; i < 8; i++)","    {","        cout << Arry[i];","    }","    cout << endl;"],"id":37}],[{"start":{"row":82,"column":4},"end":{"row":82,"column":8},"action":"insert","lines":["    "],"id":38}],[{"start":{"row":83,"column":8},"end":{"row":83,"column":12},"action":"insert","lines":["    "],"id":39}],[{"start":{"row":84,"column":4},"end":{"row":84,"column":8},"action":"insert","lines":["    "],"id":40}],[{"start":{"row":85,"column":4},"end":{"row":85,"column":8},"action":"insert","lines":["    "],"id":41}],[{"start":{"row":89,"column":4},"end":{"row":96,"column":17},"action":"remove","lines":["","    MergeSort(Arry, 0, 7);","","    for(int i = 0; i < 8; i++)","    {","        cout << Arry[i];","    }","    cout << endl;"],"id":42}],[{"start":{"row":89,"column":0},"end":{"row":89,"column":4},"action":"remove","lines":["    "],"id":43}],[{"start":{"row":88,"column":4},"end":{"row":89,"column":0},"action":"remove","lines":["",""],"id":44}],[{"start":{"row":83,"column":23},"end":{"row":83,"column":24},"action":"remove","lines":["y"],"id":45}],[{"start":{"row":83,"column":22},"end":{"row":83,"column":23},"action":"remove","lines":["r"],"id":46}],[{"start":{"row":83,"column":21},"end":{"row":83,"column":22},"action":"remove","lines":["r"],"id":47}],[{"start":{"row":83,"column":20},"end":{"row":83,"column":21},"action":"remove","lines":["A"],"id":48}],[{"start":{"row":83,"column":20},"end":{"row":83,"column":21},"action":"insert","lines":["n"],"id":49}],[{"start":{"row":83,"column":21},"end":{"row":83,"column":22},"action":"insert","lines":["o"],"id":50}],[{"start":{"row":83,"column":20},"end":{"row":83,"column":22},"action":"remove","lines":["no"],"id":51},{"start":{"row":83,"column":20},"end":{"row":83,"column":28},"action":"insert","lines":["novector"]}],[{"start":{"row":83,"column":31},"end":{"row":83,"column":32},"action":"insert","lines":[" "],"id":52}],[{"start":{"row":83,"column":32},"end":{"row":83,"column":33},"action":"insert","lines":["<"],"id":53}],[{"start":{"row":83,"column":33},"end":{"row":83,"column":34},"action":"insert","lines":["<"],"id":54}],[{"start":{"row":83,"column":34},"end":{"row":83,"column":35},"action":"insert","lines":[" "],"id":55}],[{"start":{"row":83,"column":35},"end":{"row":83,"column":37},"action":"insert","lines":["\"\""],"id":56}],[{"start":{"row":83,"column":36},"end":{"row":83,"column":37},"action":"insert","lines":[" "],"id":57}],[{"start":{"row":0,"column":0},"end":{"row":90,"column":0},"action":"remove","lines":["/* https://www.hackerearth.com/code-monk-sorting/algorithm/chandu-and-his-girlfriend/ */","","#include <iostream>","using namespace std;","","void Merge(int Arr[], int start, int end, int mid)","{","   ","    ","    int i = start, j = mid + 1; ","    int k = 0;","    int lengthaux = end - start + 1;","    int Aux[lengthaux];","    ","    while(i <= mid && j <= end)","    {","        if(Arr[i] >= Arr[j])","        {","            Aux[k] = Arr[j];","            k++;","            ","            j++;","        }","        else if(Arr[j] >= Arr[i])","        {","            Aux[k] = Arr[i];","            k++;","            ","            i++;","        }","            ","    }","    while(i <= mid)","    {","        Aux[k] = Arr[i];","        k++;","        i++;","    }","    while(j <= end)","    {","        Aux[k] = Arr[j];","        k++;","        j++;","    }","    for(int l = 0; l < lengthaux; l++)","    {","        Arr[start] = Aux[l];","        start++;","    }","    ","    ","}","","void MergeSort(int Arr[], int start, int end)","{","   if(start < end){","    int mid = (start + end) / 2;","    MergeSort(Arr, start, mid);","    MergeSort(Arr, mid+1, end);","    Merge(Arr, start, end, mid);","   }","}","","","","int main()","{","    int testcases;","    cin >> testcases;","    while(testcases--)","    {","    \tint totalnos;","    \tvector<int> novector; ","    \tcin >> totalnos;","    \tfor(int i = 0; i < totalnos; i ++)","    \t{","    \t\tint no;","    \t\tcin >> no;","    \t\tnovector.push_back(no);","    \t}","        MergeSort(novector, 0, totalnos-1);","        for(int i = 0; i < 8; i++)","        {","            cout << novector[i] << \" \";","        }","        cout << endl;","        ","    }","    ","}",""],"id":58},{"start":{"row":0,"column":0},"end":{"row":91,"column":1},"action":"insert","lines":["/* https://www.hackerearth.com/code-monk-sorting/algorithm/chandu-and-his-girlfriend/ */","","#include <iostream>","using namespace std;","","void Merge(int Arr[], int start, int end, int mid)","{","   ","    ","    int i = start, j = mid + 1; ","    int k = 0;","    int lengthaux = end - start + 1;","    int Aux[lengthaux];","    ","    while(i <= mid && j <= end)","    {","        if(Arr[i] >= Arr[j])","        {","            Aux[k] = Arr[j];","            k++;","            ","            j++;","        }","        else if(Arr[j] >= Arr[i])","        {","            Aux[k] = Arr[i];","            k++;","            ","            i++;","        }","            ","    }","    while(i <= mid)","    {","        Aux[k] = Arr[i];","        k++;","        i++;","    }","    while(j <= end)","    {","        Aux[k] = Arr[j];","        k++;","        j++;","    }","    for(int l = 0; l < lengthaux; l++)","    {","        Arr[start] = Aux[l];","        start++;","    }","    ","    ","}","","void MergeSort(int Arr[], int start, int end)","{","   if(start < end){","    int mid = (start + end) / 2;","    MergeSort(Arr, start, mid);","    MergeSort(Arr, mid+1, end);","    Merge(Arr, start, end, mid);","   }","}","","","","int main()","{","    int testcases;","    cin >> testcases;","    while(testcases--)","    {","    \tint totalnos;","    \t","    \tcin >> totalnos;","    \tint Arry[totalnos];","    \t","    \tfor(int i = 0; i < totalnos; i ++)","    \t{","    \t\tint no;","    \t\tcin >> no;","    \t\tArry[i] = no;","    \t}","        MergeSort(Arry, 0, totalnos-1);","        for(int i = totalnos-1; i >= 0; i--)","        {","            cout << Arry[i] << \" \";","        }","        cout << endl;","        ","    }","    ","}"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":91,"column":1},"end":{"row":91,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1453384964572,"hash":"5ba264d4829cab631e20a54bc780c89c459cd73c"}