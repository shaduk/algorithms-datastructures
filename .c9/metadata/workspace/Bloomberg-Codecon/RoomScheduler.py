{"filter":false,"title":"RoomScheduler.py","tooltip":"/Bloomberg-Codecon/RoomScheduler.py","undoManager":{"mark":11,"position":11,"stack":[[{"start":{"row":0,"column":0},"end":{"row":40,"column":23},"action":"insert","lines":["from __future__ import print_function","import sys","","N = int(raw_input())","inputdata = sys.stdin.read().splitlines()","","data = {}","","for line in inputdata :","    query = line.split(\"-\")","    if(len(query) == 3):","        room, start, end = int(query[0]), int(query[1]), int(query[2])","        canBook = True","        for i in range(start, start + end):","            if(i not in data):","                data[i] = []","            elif(room not in data[i]):","                canBook = True","            else:","                canBook = False","        if(canBook == True):","            for i in range(start, start + end):","                data[i].append(room)","            print(\"Y\")","        else:","            print(\"N\")","    else:","        timeSlot = int(query[0])","        noOfSlots = int(query[1])","        ans = [i for i in range(1,  N + 1)]","        for i in range(timeSlot, timeSlot + noOfSlots):","            if i in data:","                for j in data[i]:","                    if j in ans:","                        ans.remove(j)","        if(len(ans) == 0):","            print(\"None\")","        else:","            for i in ans:","                print(i, end =\" \")","            print(\"\\n\")"],"id":1}],[{"start":{"row":40,"column":0},"end":{"row":40,"column":23},"action":"remove","lines":["            print(\"\\n\")"],"id":2}],[{"start":{"row":39,"column":34},"end":{"row":40,"column":0},"action":"remove","lines":["",""],"id":3}],[{"start":{"row":39,"column":34},"end":{"row":40,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":40,"column":0},"end":{"row":40,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":40,"column":12},"end":{"row":40,"column":16},"action":"remove","lines":["    "],"id":5}],[{"start":{"row":40,"column":12},"end":{"row":40,"column":13},"action":"insert","lines":["p"],"id":6}],[{"start":{"row":40,"column":13},"end":{"row":40,"column":14},"action":"insert","lines":["r"],"id":7}],[{"start":{"row":40,"column":14},"end":{"row":40,"column":15},"action":"insert","lines":["i"],"id":8}],[{"start":{"row":40,"column":15},"end":{"row":40,"column":16},"action":"insert","lines":["n"],"id":9}],[{"start":{"row":40,"column":16},"end":{"row":40,"column":17},"action":"insert","lines":["t"],"id":10}],[{"start":{"row":40,"column":17},"end":{"row":40,"column":19},"action":"insert","lines":["()"],"id":11}],[{"start":{"row":0,"column":0},"end":{"row":40,"column":19},"action":"remove","lines":["from __future__ import print_function","import sys","","N = int(raw_input())","inputdata = sys.stdin.read().splitlines()","","data = {}","","for line in inputdata :","    query = line.split(\"-\")","    if(len(query) == 3):","        room, start, end = int(query[0]), int(query[1]), int(query[2])","        canBook = True","        for i in range(start, start + end):","            if(i not in data):","                data[i] = []","            elif(room not in data[i]):","                canBook = True","            else:","                canBook = False","        if(canBook == True):","            for i in range(start, start + end):","                data[i].append(room)","            print(\"Y\")","        else:","            print(\"N\")","    else:","        timeSlot = int(query[0])","        noOfSlots = int(query[1])","        ans = [i for i in range(1,  N + 1)]","        for i in range(timeSlot, timeSlot + noOfSlots):","            if i in data:","                for j in data[i]:","                    if j in ans:","                        ans.remove(j)","        if(len(ans) == 0):","            print(\"None\")","        else:","            for i in ans:","                print(i, end =\" \")","            print()"],"id":12},{"start":{"row":0,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["#Problem        : Finals Spring 2015 - Conference Room Scheduler","#Language       : Python","#Compiled Using : py_compile","#Version        : Python 2.7.8","#Input for your program will be provided from STDIN","#Print out all output from your program to STDOUT","","from __future__ import print_function","import sys","","N = int(raw_input())","inputdata = sys.stdin.read().splitlines()","","data = {}","","for line in inputdata :","    query = line.split(\"-\")","    if(len(query) == 3):","        room, start, end = int(query[0]), int(query[1]), int(query[2])","        canBook = True","        for i in range(start, start + end):","            if(i not in data):","                data[i] = []","            elif(room not in data[i]):","                canBook = True","            else:","                canBook = False","                break","        if(canBook == True):","            for i in range(start, start + end):","                data[i].append(room)","            print(\"Y\")","        else:","            print(\"N\")","    else:","        timeSlot = int(query[0])","        noOfSlots = int(query[1])","        ans = [i for i in range(1,  N + 1)]","        for i in range(timeSlot, timeSlot + noOfSlots):","            if i in data:","                for j in data[i]:","                    if j in ans:","                        ans.remove(j)","        if(len(ans) == 0):","            print(\"None\")","        else:","            for i in ans:","                print(i, end =\" \")","            print()",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":49,"column":0},"end":{"row":49,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1499836642515,"hash":"8c3eb954d452faaaf0b32360f49456e8866915d8"}