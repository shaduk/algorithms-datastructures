{"filter":false,"title":"samePatterns.py","tooltip":"/CodeFights/samePatterns.py","undoManager":{"mark":11,"position":11,"stack":[[{"start":{"row":0,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["def samePattern(str1, str2):","    dic = {}","    for i in range(0, len(str1)):","        if str1[i] not in dic:","            dic[str1[i]] = str2[i]","        elif str1[i] in dic:","            if dic[str1[i]] != str2[i]:","                return False","    return True","","def areFollowingPatterns(strings, patterns):","    if(len(strings) != len(patterns)):","        return False","    return samePattern(strings, patterns) and samePattern(patterns, strings)","    "],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":6}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":2},"action":"insert","lines":["''"],"id":7}],[{"start":{"row":1,"column":2},"end":{"row":1,"column":3},"action":"insert","lines":["'"],"id":8}],[{"start":{"row":1,"column":3},"end":{"row":8,"column":48},"action":"insert","lines":["Given an array strings, determine whether it follows the sequence given in the patterns array. In other words, there should be no i and j for which strings[i] = strings[j] and patterns[i] ≠ patterns[j] or for which strings[i] ≠ strings[j] and patterns[i] = patterns[j].","","Example","","For strings = [\"cat\", \"dog\", \"dog\"] and patterns = [\"a\", \"b\", \"b\"], the output should be","areFollowingPatterns(strings, patterns) = true;","For strings = [\"cat\", \"dog\", \"doggy\"] and patterns = [\"a\", \"b\", \"b\"], the output should be","areFollowingPatterns(strings, patterns) = false."],"id":9}],[{"start":{"row":8,"column":48},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":10}],[{"start":{"row":9,"column":0},"end":{"row":9,"column":2},"action":"insert","lines":["''"],"id":11}],[{"start":{"row":9,"column":2},"end":{"row":9,"column":3},"action":"insert","lines":["'"],"id":12}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":9,"column":3},"end":{"row":9,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1499897395609,"hash":"6b9eefe070d4f19b71af0028ac2dace93d024cae"}