{"changed":true,"filter":false,"title":"MedianHeap.cpp","tooltip":"/Problems/MedianHeap.cpp","value":"#include <iostream>\n\nusing namespace std;\n\nclass MedianHeap{\n    \nprivate:\n    int H[1000];\n    int size = 0;\n    \n    void Swap(int i, int j)\n    {\n        int temp = H[i];\n        H[i] = H[j];\n        H[j] = temp;\n    }\n    \n    void ShiftUp(int s)\n    {\n        if(H[s] < H[s/2])\n        {\n            Swap(s, s/2);\n            ShiftUp(s/2);\n        }\n    }\n\n    \npublic:\n    void add(int value)\n    {\n        size = size + 1;\n        H[size] = value;\n        ShiftUp(size);\n    }\n    \n    int median()\n    {\n        return H[(size+1)/2];\n    }\n    \n    void Print()\n    {\n        for(int i = 1; i <= size; i++)\n            cout << H[i] << \" \";\n        cout << endl;\n    }\n};\n\nint main()\n{\n    MedianHeap minheap;\n    minheap.add(5);\n    cout << minheap.median() << endl;\n    minheap.add(10);\n    cout << minheap.median() << endl;\n    minheap.add(7);\n    cout << minheap.median() << endl;\n    minheap.add(1);\n    cout << minheap.median() << endl;\n    minheap.add(6);\n    cout << minheap.median() << endl;\n    minheap.add(9);\n    cout << minheap.median() << endl;\n    minheap.add(12);\n    cout << minheap.median() << endl;\n    minheap.add(13);\n    cout << minheap.median() << endl;\n    minheap.Print();\n}","undoManager":{"mark":-2,"position":19,"stack":[[{"start":{"row":0,"column":0},"end":{"row":62,"column":1},"action":"insert","lines":["#include <iostream>","","using namespace std;","","class MedianHeap{","    ","private:","    int H[1000];","    int size = 0;","    ","    void Swap(int i, int j)","    {","        int temp = H[i];","        H[i] = H[j];","        H[j] = temp;","    }","    ","    void ShiftUp(int s)","    {","        if(H[s] < H[s/2])","        {","            Swap(s, s/2);","            ShiftUp(s/2);","        }","    }","","    ","public:","    void add(int value)","    {","        size = size + 1;","        H[size] = value;","        ShiftUp(size);","    }","    ","    int median()","    {","        return H[(size+1)/2];","    }","    ","    void Print()","    {","        for(int i = 1; i < size; i++)","            cout << H[i] << \" \";","        cout << endl;","    }","};","","int main()","{","    MedianHeap minheap;","    minheap.add(5);","    cout << minheap.median() << endl;","    minheap.add(10);","    cout << minheap.median() << endl;","    minheap.add(7);","    cout << minheap.median() << endl;","    minheap.add(1);","    cout << minheap.median() << endl;","    minheap.add(6);","    cout << minheap.median() << endl;","    minheap.Print();","}"],"id":1}],[{"start":{"row":42,"column":27},"end":{"row":42,"column":28},"action":"insert","lines":["="],"id":2}],[{"start":{"row":42,"column":26},"end":{"row":42,"column":27},"action":"remove","lines":[" "],"id":3}],[{"start":{"row":42,"column":27},"end":{"row":42,"column":28},"action":"insert","lines":[" "],"id":4}],[{"start":{"row":60,"column":37},"end":{"row":61,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":61,"column":0},"end":{"row":61,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":61,"column":4},"end":{"row":62,"column":37},"action":"insert","lines":["minheap.add(6);","    cout << minheap.median() << endl;"],"id":6}],[{"start":{"row":61,"column":16},"end":{"row":61,"column":17},"action":"remove","lines":["6"],"id":7}],[{"start":{"row":61,"column":16},"end":{"row":61,"column":17},"action":"insert","lines":["9"],"id":8}],[{"start":{"row":62,"column":37},"end":{"row":63,"column":0},"action":"insert","lines":["",""],"id":9},{"start":{"row":63,"column":0},"end":{"row":63,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":63,"column":4},"end":{"row":64,"column":37},"action":"insert","lines":["minheap.add(9);","    cout << minheap.median() << endl;"],"id":10}],[{"start":{"row":64,"column":37},"end":{"row":65,"column":0},"action":"insert","lines":["",""],"id":11},{"start":{"row":65,"column":0},"end":{"row":65,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":65,"column":4},"end":{"row":66,"column":37},"action":"insert","lines":["minheap.add(9);","    cout << minheap.median() << endl;"],"id":12}],[{"start":{"row":63,"column":16},"end":{"row":63,"column":17},"action":"remove","lines":["9"],"id":13}],[{"start":{"row":63,"column":16},"end":{"row":63,"column":17},"action":"insert","lines":["1"],"id":14}],[{"start":{"row":63,"column":17},"end":{"row":63,"column":18},"action":"insert","lines":["2"],"id":15}],[{"start":{"row":65,"column":16},"end":{"row":65,"column":17},"action":"remove","lines":["9"],"id":16}],[{"start":{"row":65,"column":16},"end":{"row":65,"column":17},"action":"insert","lines":["1"],"id":17}],[{"start":{"row":65,"column":17},"end":{"row":65,"column":18},"action":"insert","lines":["4"],"id":18}],[{"start":{"row":65,"column":17},"end":{"row":65,"column":18},"action":"remove","lines":["4"],"id":19}],[{"start":{"row":65,"column":17},"end":{"row":65,"column":18},"action":"insert","lines":["3"],"id":20}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":65,"column":18},"end":{"row":65,"column":18},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1476917009522}