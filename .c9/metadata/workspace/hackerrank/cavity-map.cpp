{"filter":false,"title":"cavity-map.cpp","tooltip":"/hackerrank/cavity-map.cpp","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":32,"column":0},"action":"insert","lines":["#include <cmath>","#include <cstdio>","#include <vector>","#include <iostream>","#include <algorithm>","using namespace std;","","","int main(){","    int n;","    cin >> n;","    vector<string> grid(n);","    for(int grid_i = 0;grid_i < n;grid_i++){","       cin >> grid[grid_i];","    }","    for(int grid_i = 0; grid_i < n; grid_i++)","        {","        for(int i = 0; i < n; i++)","         {","            if(i != 0 && i != n-1)","            {","            if(grid[grid_i][i-1] < grid[grid_i][i] && grid[grid_i][i+1] < grid[grid_i][i])","                grid[grid_i][i] = 'X';","        }","        }","            ","    }","    for(int grid_i = 0;grid_i < n;grid_i++){","       cout << grid[grid_i] << endl;","    }","    return 0;","}",""],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":32,"column":0},"end":{"row":32,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1462052960539,"hash":"4446bb442d38ebda11d43505fb0da93d7caa2888"}