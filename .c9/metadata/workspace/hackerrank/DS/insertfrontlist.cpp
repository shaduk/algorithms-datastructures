{"filter":false,"title":"insertfrontlist.cpp","tooltip":"/hackerrank/DS/insertfrontlist.cpp","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":32,"column":0},"action":"remove","lines":["/*","  Insert Node at the begining of a linked list","  Initially head pointer argument could be NULL for empty list","  Node is defined as ","  struct Node","  {","     int data;","     struct Node *next;","  }","return back the pointer to the head of the linked list in the below method.","*/","Node* Insert(Node *head,int data)","{","    if(head == NULL)","     {","        Node* temp3 = new Node();","        temp3->data = data;","        temp3->next = NULL; ","         ","        Node *temp = head;","        temp = temp3;","        return temp;","    }","    else","    {","        Node* temp2 = new Node();","        temp2->data = data;","        temp2->next = head;","        return temp2;","    }","    ","}",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":30,"column":0},"action":"insert","lines":["/*","  Insert Node at the begining of a linked list","  Initially head pointer argument could be NULL for empty list","  Node is defined as ","  struct Node","  {","     int data;","     struct Node *next;","  }","return back the pointer to the head of the linked list in the below method.","*/","Node* Insert(Node *head,int data)","{","    ","    Node* temp = new Node();","    temp->data = data;","    if(head == NULL)","     {","        temp->next = NULL; ","        head = temp;","        return head;","    }","    else","    {","        temp->next = head;","        head = temp;","        return head;","    }","    ","}",""]}]]},"ace":{"folds":[],"scrolltop":19.5,"scrollleft":0,"selection":{"start":{"row":30,"column":0},"end":{"row":30,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1459949505811,"hash":"b7f2c31c9d35fa6f7714db5d896628370d38c6e8"}