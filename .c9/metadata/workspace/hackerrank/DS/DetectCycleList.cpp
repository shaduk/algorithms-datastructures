{"filter":false,"title":"DetectCycleList.cpp","tooltip":"/hackerrank/DS/DetectCycleList.cpp","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["/*","  Detect loop in a linked list ","  List could be empty also","  Node is defined as ","  struct Node","  {","     int data;","     struct Node *next;","  }","*/","int HasCycle(Node* head)","{","   Node* slow_ptr, *fast_ptr;","   slow_ptr = head;","   fast_ptr = head;","   while(slow_ptr && fast_ptr && fast_ptr->next)","       {","       slow_ptr = slow_ptr->next;","       fast_ptr = fast_ptr->next->next;","       if(slow_ptr == fast_ptr)","       return 1;","   }","    return 0;","}",""],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":20,"column":16},"end":{"row":20,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1460287918000,"hash":"b52667d629f9b60abc206897ae859c2db3e01724"}