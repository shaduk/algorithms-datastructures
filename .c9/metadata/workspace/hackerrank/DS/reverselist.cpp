{"filter":false,"title":"reverselist.cpp","tooltip":"/hackerrank/DS/reverselist.cpp","undoManager":{"mark":6,"position":6,"stack":[[{"start":{"row":0,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["/*","  Print elements of a linked list in reverse order as standard output","  head pointer could be NULL as well for empty list","  Node is defined as ","  struct Node","  {","     int data;","     struct Node *next;","  }","*/","void ReversePrint(Node *head)","{","    Node *current, *prev, *next;","    current = head;","    prev = NULL;","    while(current != NULL)","        {","        next = current->next;","        current->next = prev;","        prev = current;","        current = next;","    }","    head = prev;","    while(head != NULL)","        {","        cout << head->data << endl;","        head = head->next;","    }","}",""],"id":1}],[{"start":{"row":23,"column":4},"end":{"row":27,"column":5},"action":"remove","lines":["while(head != NULL)","        {","        cout << head->data << endl;","        head = head->next;","    }"],"id":2}],[{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"remove","lines":["    "],"id":3}],[{"start":{"row":22,"column":16},"end":{"row":23,"column":0},"action":"remove","lines":["",""],"id":4}],[{"start":{"row":12,"column":4},"end":{"row":22,"column":16},"action":"remove","lines":["Node *current, *prev, *next;","    current = head;","    prev = NULL;","    while(current != NULL)","        {","        next = current->next;","        current->next = prev;","        prev = current;","        current = next;","    }","    head = prev;"],"id":5}],[{"start":{"row":0,"column":0},"end":{"row":14,"column":0},"action":"remove","lines":["/*","  Print elements of a linked list in reverse order as standard output","  head pointer could be NULL as well for empty list","  Node is defined as ","  struct Node","  {","     int data;","     struct Node *next;","  }","*/","void ReversePrint(Node *head)","{","    ","}",""],"id":6}],[{"start":{"row":0,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["/*","  Reverse a linked list and return pointer to the head","  The input list will have at least one element  ","  Node is defined as ","  struct Node","  {","     int data;","     struct Node *next;","  }","*/","Node* Reverse(Node *head)","{","    Node *current, *prev, *next;","    current = head;","    prev = NULL;","    while(current != NULL)","        {","        next = current->next;","        current->next = prev;","        prev = current;","        current = next;","    }","    head = prev;","    return head;","}",""],"id":7}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":25,"column":0},"end":{"row":25,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1460019120040,"hash":"bee6a19c46b9b5711728c02688b1151079f5f99c"}