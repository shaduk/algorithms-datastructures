{"changed":false,"filter":false,"title":"reverselist.cpp","tooltip":"/hackerrank/DS/reverselist.cpp","value":"/*\n  Reverse a linked list and return pointer to the head\n  The input list will have at least one element  \n  Node is defined as \n  struct Node\n  {\n     int data;\n     struct Node *next;\n  }\n*/\nNode* Reverse(Node *head)\n{\n    Node *current, *prev, *next;\n    current = head;\n    prev = NULL;\n    while(current != NULL)\n        {\n        next = current->next;\n        current->next = prev;\n        prev = current;\n        current = next;\n    }\n    head = prev;\n    return head;\n}\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":54,"scrollleft":0,"selection":{"start":{"row":25,"column":0},"end":{"row":25,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":1,"state":"comment","mode":"ace/mode/c_cpp"}},"timestamp":1460019120040}