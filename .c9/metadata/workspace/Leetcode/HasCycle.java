{"filter":false,"title":"HasCycle.java","tooltip":"/Leetcode/HasCycle.java","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":25,"column":1},"action":"insert","lines":["/**"," * Definition for singly-linked list."," * class ListNode {"," *     int val;"," *     ListNode next;"," *     ListNode(int x) {"," *         val = x;"," *         next = null;"," *     }"," * }"," */","public class Solution {","    public boolean hasCycle(ListNode head) {","        ListNode slowptr, fastptr;","        slowptr = head;","        fastptr = head;","        while(slowptr!=null && fastptr!=null && fastptr.next != null)","        {","            slowptr = slowptr.next;","            fastptr = fastptr.next.next;","            if(slowptr == fastptr)","                return true;","        }","        return false;","    }","}"],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":6,"column":19},"end":{"row":6,"column":19},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":5,"state":"doc-start","mode":"ace/mode/java"}},"hash":"624d22ca072ece65a864d9cf44d98f73f242213d","timestamp":1484333207033}