{"filter":false,"title":"BalancedBinaryTree.java","tooltip":"/Leetcode/BalancedBinaryTree.java","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":37,"column":1},"action":"insert","lines":["/**"," * Definition for a binary tree node."," * public class TreeNode {"," *     int val;"," *     TreeNode left;"," *     TreeNode right;"," *     TreeNode(int x) { val = x; }"," * }"," */","public class Solution {","    ","    public int heightTree(TreeNode root)","    {","        if(root == null)","            return 0;","        else","        {","            int heightLeft = heightTree(root.left);","            int heightRight = heightTree(root.right);","            if(heightLeft > heightRight)","                return 1 + heightLeft;","            else","                return 1 + heightRight;","        }","    }","    ","    public boolean isBalanced(TreeNode root) {","        if(root == null)","            return true;","        else","        {","            if(Math.abs(heightTree(root.left) - heightTree(root.right)) > 1)","                return false;","            else","                return isBalanced(root.left) && isBalanced(root.right);","        }","    }","}"],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":37,"column":1},"end":{"row":37,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1482108287439,"hash":"b76b84a21a6ea009143b2339f75cee9c4c968e46"}